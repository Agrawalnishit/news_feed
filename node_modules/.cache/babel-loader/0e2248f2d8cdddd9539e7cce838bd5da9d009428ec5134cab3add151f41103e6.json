{"ast":null,"code":"var _jsxFileName = \"D:\\\\Intern_assignment\\\\news-feed-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.jsx';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport * as serviceWorker from './serviceWorker';\n\n// Initialize the root element\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootElement = document.getElementById('root');\nif (!rootElement) {\n  throw new Error('Failed to find the root element');\n}\n\n// Create the root\nconst root = ReactDOM.createRoot(rootElement);\n\n// Render the app\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this));\n\n// Register service worker with configuration\nserviceWorker.register({\n  onSuccess: registration => {\n    console.log('PWA is ready for offline use:', registration);\n  },\n  onUpdate: registration => {\n    const waitingServiceWorker = registration.waiting;\n    if (waitingServiceWorker) {\n      waitingServiceWorker.addEventListener(\"statechange\", event => {\n        if (event.target.state === \"activated\") {\n          window.location.reload();\n        }\n      });\n      waitingServiceWorker.postMessage({\n        type: \"SKIP_WAITING\"\n      });\n    }\n  }\n});","map":{"version":3,"names":["React","ReactDOM","App","ErrorBoundary","serviceWorker","jsxDEV","_jsxDEV","rootElement","document","getElementById","Error","root","createRoot","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","register","onSuccess","registration","console","log","onUpdate","waitingServiceWorker","waiting","addEventListener","event","target","state","window","location","reload","postMessage","type"],"sources":["D:/Intern_assignment/news-feed-app/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Initialize the root element\r\nconst rootElement = document.getElementById('root');\r\nif (!rootElement) {\r\n  throw new Error('Failed to find the root element');\r\n}\r\n\r\n// Create the root\r\nconst root = ReactDOM.createRoot(rootElement);\r\n\r\n// Render the app\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ErrorBoundary>\r\n      <App />\r\n    </ErrorBoundary>\r\n  </React.StrictMode>\r\n);\r\n\r\n// Register service worker with configuration\r\nserviceWorker.register({\r\n  onSuccess: (registration) => {\r\n    console.log('PWA is ready for offline use:', registration);\r\n  },\r\n  onUpdate: (registration) => {\r\n    const waitingServiceWorker = registration.waiting;\r\n    if (waitingServiceWorker) {\r\n      waitingServiceWorker.addEventListener(\"statechange\", event => {\r\n        if (event.target.state === \"activated\") {\r\n          window.location.reload();\r\n        }\r\n      });\r\n      waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\r\n    }\r\n  }\r\n});"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAO,KAAKC,aAAa,MAAM,iBAAiB;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACnD,IAAI,CAACF,WAAW,EAAE;EAChB,MAAM,IAAIG,KAAK,CAAC,iCAAiC,CAAC;AACpD;;AAEA;AACA,MAAMC,IAAI,GAAGV,QAAQ,CAACW,UAAU,CAACL,WAAW,CAAC;;AAE7C;AACAI,IAAI,CAACE,MAAM,cACTP,OAAA,CAACN,KAAK,CAACc,UAAU;EAAAC,QAAA,eACfT,OAAA,CAACH,aAAa;IAAAY,QAAA,eACZT,OAAA,CAACJ,GAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CACpB,CAAC;;AAED;AACAf,aAAa,CAACgB,QAAQ,CAAC;EACrBC,SAAS,EAAGC,YAAY,IAAK;IAC3BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,YAAY,CAAC;EAC5D,CAAC;EACDG,QAAQ,EAAGH,YAAY,IAAK;IAC1B,MAAMI,oBAAoB,GAAGJ,YAAY,CAACK,OAAO;IACjD,IAAID,oBAAoB,EAAE;MACxBA,oBAAoB,CAACE,gBAAgB,CAAC,aAAa,EAAEC,KAAK,IAAI;QAC5D,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,KAAK,WAAW,EAAE;UACtCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;QAC1B;MACF,CAAC,CAAC;MACFR,oBAAoB,CAACS,WAAW,CAAC;QAAEC,IAAI,EAAE;MAAe,CAAC,CAAC;IAC5D;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}