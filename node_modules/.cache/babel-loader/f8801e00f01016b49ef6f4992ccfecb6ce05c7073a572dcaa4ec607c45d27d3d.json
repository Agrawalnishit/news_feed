{"ast":null,"code":"export const calculateReadingTime = text => {\n  var _text$split;\n  const wordsPerMinute = 200; // Average reading speed\n  const wordCount = (text === null || text === void 0 ? void 0 : (_text$split = text.split(/\\s+/)) === null || _text$split === void 0 ? void 0 : _text$split.length) || 0;\n  const readingTime = Math.ceil(wordCount / wordsPerMinute);\n  return readingTime;\n};\nexport const shareArticle = async article => {\n  if (navigator.share) {\n    try {\n      await navigator.share({\n        title: article.title,\n        text: article.description,\n        url: article.url\n      });\n      return true;\n    } catch (error) {\n      console.warn('Error sharing:', error);\n      return false;\n    }\n  }\n  return false;\n};\nexport const copyToClipboard = async text => {\n  try {\n    await navigator.clipboard.writeText(text);\n    return true;\n  } catch (error) {\n    console.warn('Error copying to clipboard:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["calculateReadingTime","text","_text$split","wordsPerMinute","wordCount","split","length","readingTime","Math","ceil","shareArticle","article","navigator","share","title","description","url","error","console","warn","copyToClipboard","clipboard","writeText"],"sources":["D:/Intern_assignment/news-feed-app/src/utils/helpers.js"],"sourcesContent":["export const calculateReadingTime = (text) => {\r\n  const wordsPerMinute = 200; // Average reading speed\r\n  const wordCount = text?.split(/\\s+/)?.length || 0;\r\n  const readingTime = Math.ceil(wordCount / wordsPerMinute);\r\n  return readingTime;\r\n};\r\n\r\nexport const shareArticle = async (article) => {\r\n  if (navigator.share) {\r\n    try {\r\n      await navigator.share({\r\n        title: article.title,\r\n        text: article.description,\r\n        url: article.url,\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      console.warn('Error sharing:', error);\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const copyToClipboard = async (text) => {\r\n  try {\r\n    await navigator.clipboard.writeText(text);\r\n    return true;\r\n  } catch (error) {\r\n    console.warn('Error copying to clipboard:', error);\r\n    return false;\r\n  }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAIC,IAAI,IAAK;EAAA,IAAAC,WAAA;EAC5C,MAAMC,cAAc,GAAG,GAAG,CAAC,CAAC;EAC5B,MAAMC,SAAS,GAAG,CAAAH,IAAI,aAAJA,IAAI,wBAAAC,WAAA,GAAJD,IAAI,CAAEI,KAAK,CAAC,KAAK,CAAC,cAAAH,WAAA,uBAAlBA,WAAA,CAAoBI,MAAM,KAAI,CAAC;EACjD,MAAMC,WAAW,GAAGC,IAAI,CAACC,IAAI,CAACL,SAAS,GAAGD,cAAc,CAAC;EACzD,OAAOI,WAAW;AACpB,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAOC,OAAO,IAAK;EAC7C,IAAIC,SAAS,CAACC,KAAK,EAAE;IACnB,IAAI;MACF,MAAMD,SAAS,CAACC,KAAK,CAAC;QACpBC,KAAK,EAAEH,OAAO,CAACG,KAAK;QACpBb,IAAI,EAAEU,OAAO,CAACI,WAAW;QACzBC,GAAG,EAAEL,OAAO,CAACK;MACf,CAAC,CAAC;MACF,OAAO,IAAI;IACb,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,IAAI,CAAC,gBAAgB,EAAEF,KAAK,CAAC;MACrC,OAAO,KAAK;IACd;EACF;EACA,OAAO,KAAK;AACd,CAAC;AAED,OAAO,MAAMG,eAAe,GAAG,MAAOnB,IAAI,IAAK;EAC7C,IAAI;IACF,MAAMW,SAAS,CAACS,SAAS,CAACC,SAAS,CAACrB,IAAI,CAAC;IACzC,OAAO,IAAI;EACb,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACdC,OAAO,CAACC,IAAI,CAAC,6BAA6B,EAAEF,KAAK,CAAC;IAClD,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}