{"ast":null,"code":"var _jsxFileName = \"D:\\\\Intern_assignment\\\\news-feed-app\\\\src\\\\components\\\\MarketOverview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarketOverview = () => {\n  _s();\n  const [marketData, setMarketData] = useState({\n    indices: [],\n    currencies: [],\n    commodities: [],\n    loading: true,\n    error: null,\n    lastUpdate: null\n  });\n\n  // Major market indices to track\n  const indices = [{\n    symbol: '^GSPC',\n    name: 'S&P 500'\n  }, {\n    symbol: '^DJI',\n    name: 'Dow Jones'\n  }, {\n    symbol: '^IXIC',\n    name: 'NASDAQ'\n  }, {\n    symbol: '^FTSE',\n    name: 'FTSE 100'\n  }, {\n    symbol: '^N225',\n    name: 'Nikkei 225'\n  }];\n\n  // Major currencies\n  const currencies = [{\n    symbol: 'EUR=X',\n    name: 'EUR/USD'\n  }, {\n    symbol: 'JPY=X',\n    name: 'USD/JPY'\n  }, {\n    symbol: 'GBP=X',\n    name: 'GBP/USD'\n  }, {\n    symbol: 'CNY=X',\n    name: 'USD/CNY'\n  }];\n\n  // Major commodities\n  const commodities = [{\n    symbol: 'GC=F',\n    name: 'Gold'\n  }, {\n    symbol: 'SI=F',\n    name: 'Silver'\n  }, {\n    symbol: 'CL=F',\n    name: 'Crude Oil'\n  }, {\n    symbol: 'BTC-USD',\n    name: 'Bitcoin'\n  }];\n  const formatPercentage = value => {\n    const num = parseFloat(value);\n    const sign = num > 0 ? '+' : '';\n    return `${sign}${num.toFixed(2)}%`;\n  };\n  const getColorClass = value => {\n    const num = parseFloat(value);\n    return num > 0 ? 'text-green-600 dark:text-green-500' : num < 0 ? 'text-red-600 dark:text-red-500' : 'text-gray-600 dark:text-gray-400';\n  };\n  useEffect(() => {\n    const generateMockPrice = (basePrice, volatility = 0.02) => {\n      const change = (Math.random() - 0.5) * 2 * volatility;\n      return basePrice * (1 + change);\n    };\n    const basePrices = {\n      '^GSPC': 33069,\n      '^DJI': 16361,\n      '^IXIC': 36281,\n      '^FTSE': 30496,\n      '^N225': 23788,\n      'EUR=X': 0.5940,\n      'JPY=X': 0.5557,\n      'GBP=X': 1.7439,\n      'CNY=X': 1.0155,\n      'GC=F': 1717,\n      'SI=F': 1212,\n      'CL=F': 1392,\n      'BTC-USD': 1639\n    };\n    const fetchMarketData = async () => {\n      try {\n        // Only show loading indicator on first load\n        if (!marketData.lastUpdate) {\n          setMarketData(prev => ({\n            ...prev,\n            loading: true,\n            error: null\n          }));\n        }\n\n        // Generate realistic mock data based on previous values\n        const mockData = {\n          indices: indices.map(index => {\n            var _marketData$indices$f;\n            const basePrice = basePrices[index.symbol];\n            const currentPrice = generateMockPrice(basePrice);\n            const prevPrice = ((_marketData$indices$f = marketData.indices.find(i => i.symbol === index.symbol)) === null || _marketData$indices$f === void 0 ? void 0 : _marketData$indices$f.price) || basePrice;\n            const change = (currentPrice - prevPrice) / prevPrice * 100;\n            return {\n              ...index,\n              price: Math.round(currentPrice),\n              change: change.toFixed(2)\n            };\n          }),\n          currencies: currencies.map(currency => {\n            var _marketData$currencie;\n            const basePrice = basePrices[currency.symbol];\n            const currentPrice = generateMockPrice(basePrice, 0.01);\n            const prevPrice = ((_marketData$currencie = marketData.currencies.find(c => c.symbol === currency.symbol)) === null || _marketData$currencie === void 0 ? void 0 : _marketData$currencie.price) || basePrice;\n            const change = (currentPrice - prevPrice) / prevPrice * 100;\n            return {\n              ...currency,\n              price: currentPrice.toFixed(4),\n              change: change.toFixed(2)\n            };\n          }),\n          commodities: commodities.map(commodity => {\n            var _marketData$commoditi;\n            const basePrice = basePrices[commodity.symbol];\n            const currentPrice = generateMockPrice(basePrice, 0.015);\n            const prevPrice = ((_marketData$commoditi = marketData.commodities.find(c => c.symbol === commodity.symbol)) === null || _marketData$commoditi === void 0 ? void 0 : _marketData$commoditi.price) || basePrice;\n            const change = (currentPrice - prevPrice) / prevPrice * 100;\n            return {\n              ...commodity,\n              price: Math.round(currentPrice),\n              change: change.toFixed(2)\n            };\n          })\n        };\n        setMarketData(prev => ({\n          ...prev,\n          ...mockData,\n          loading: false,\n          lastUpdate: new Date().toISOString(),\n          error: null\n        }));\n      } catch (error) {\n        console.error('Market data error:', error);\n        setMarketData(prev => ({\n          ...prev,\n          loading: false,\n          error: 'Failed to fetch market data. Please try again later.'\n        }));\n      }\n    };\n\n    // Initial fetch\n    fetchMarketData();\n\n    // Update every 60 seconds (1 minute)\n    const interval = setInterval(fetchMarketData, 60000);\n\n    // Cleanup interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n  const renderMarketItem = item => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-between items-center p-2 rounded-md bg-gray-50 dark:bg-gray-700\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm font-medium text-gray-900 dark:text-gray-100\",\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs text-gray-500 dark:text-gray-400\",\n        children: marketData.lastUpdate && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Updated: \", new Date(marketData.lastUpdate).toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm font-medium text-gray-900 dark:text-gray-100\",\n        children: typeof item.price === 'number' ? item.price.toLocaleString() : item.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `text-xs font-medium ${getColorClass(item.change)}`,\n        children: formatPercentage(item.change)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, item.symbol, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n  const renderMarketSection = (title, items, isLoading) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-3 text-gray-900 dark:text-gray-100\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-2\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-pulse space-y-2\",\n        children: [1, 2, 3].map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-12 bg-gray-200 dark:bg-gray-700 rounded\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this) : items.map(renderMarketItem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n    children: [renderMarketSection('Market Indices', marketData.indices, marketData.loading), renderMarketSection('Currencies', marketData.currencies, marketData.loading), renderMarketSection('Commodities & Crypto', marketData.commodities, marketData.loading), marketData.error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-full bg-red-50 dark:bg-red-900 p-4 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 dark:text-red-200\",\n        children: marketData.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(MarketOverview, \"GrqSdh4Gya4CR6BJIenv+pnfhWA=\");\n_c = MarketOverview;\nexport default MarketOverview;\nvar _c;\n$RefreshReg$(_c, \"MarketOverview\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MarketOverview","_s","marketData","setMarketData","indices","currencies","commodities","loading","error","lastUpdate","symbol","name","formatPercentage","value","num","parseFloat","sign","toFixed","getColorClass","generateMockPrice","basePrice","volatility","change","Math","random","basePrices","fetchMarketData","prev","mockData","map","index","_marketData$indices$f","currentPrice","prevPrice","find","i","price","round","currency","_marketData$currencie","c","commodity","_marketData$commoditi","Date","toISOString","console","interval","setInterval","clearInterval","renderMarketItem","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","toLocaleString","renderMarketSection","title","items","isLoading","_c","$RefreshReg$"],"sources":["D:/Intern_assignment/news-feed-app/src/components/MarketOverview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst MarketOverview = () => {\r\n  const [marketData, setMarketData] = useState({\r\n    indices: [],\r\n    currencies: [],\r\n    commodities: [],\r\n    loading: true,\r\n    error: null,\r\n    lastUpdate: null\r\n  });\r\n\r\n  // Major market indices to track\r\n  const indices = [\r\n    { symbol: '^GSPC', name: 'S&P 500' },\r\n    { symbol: '^DJI', name: 'Dow Jones' },\r\n    { symbol: '^IXIC', name: 'NASDAQ' },\r\n    { symbol: '^FTSE', name: 'FTSE 100' },\r\n    { symbol: '^N225', name: 'Nikkei 225' }\r\n  ];\r\n\r\n  // Major currencies\r\n  const currencies = [\r\n    { symbol: 'EUR=X', name: 'EUR/USD' },\r\n    { symbol: 'JPY=X', name: 'USD/JPY' },\r\n    { symbol: 'GBP=X', name: 'GBP/USD' },\r\n    { symbol: 'CNY=X', name: 'USD/CNY' }\r\n  ];\r\n\r\n  // Major commodities\r\n  const commodities = [\r\n    { symbol: 'GC=F', name: 'Gold' },\r\n    { symbol: 'SI=F', name: 'Silver' },\r\n    { symbol: 'CL=F', name: 'Crude Oil' },\r\n    { symbol: 'BTC-USD', name: 'Bitcoin' }\r\n  ];\r\n\r\n  const formatPercentage = (value) => {\r\n    const num = parseFloat(value);\r\n    const sign = num > 0 ? '+' : '';\r\n    return `${sign}${num.toFixed(2)}%`;\r\n  };\r\n\r\n  const getColorClass = (value) => {\r\n    const num = parseFloat(value);\r\n    return num > 0 ? 'text-green-600 dark:text-green-500' : \r\n           num < 0 ? 'text-red-600 dark:text-red-500' : \r\n           'text-gray-600 dark:text-gray-400';\r\n  };\r\n\r\n  useEffect(() => {\r\n    const generateMockPrice = (basePrice, volatility = 0.02) => {\r\n      const change = (Math.random() - 0.5) * 2 * volatility;\r\n      return basePrice * (1 + change);\r\n    };\r\n\r\n    const basePrices = {\r\n      '^GSPC': 33069,\r\n      '^DJI': 16361,\r\n      '^IXIC': 36281,\r\n      '^FTSE': 30496,\r\n      '^N225': 23788,\r\n      'EUR=X': 0.5940,\r\n      'JPY=X': 0.5557,\r\n      'GBP=X': 1.7439,\r\n      'CNY=X': 1.0155,\r\n      'GC=F': 1717,\r\n      'SI=F': 1212,\r\n      'CL=F': 1392,\r\n      'BTC-USD': 1639\r\n    };\r\n\r\n    const fetchMarketData = async () => {\r\n      try {\r\n        // Only show loading indicator on first load\r\n        if (!marketData.lastUpdate) {\r\n          setMarketData(prev => ({ ...prev, loading: true, error: null }));\r\n        }\r\n\r\n        // Generate realistic mock data based on previous values\r\n        const mockData = {\r\n          indices: indices.map(index => {\r\n            const basePrice = basePrices[index.symbol];\r\n            const currentPrice = generateMockPrice(basePrice);\r\n            const prevPrice = marketData.indices.find(i => i.symbol === index.symbol)?.price || basePrice;\r\n            const change = ((currentPrice - prevPrice) / prevPrice * 100);\r\n            \r\n            return {\r\n              ...index,\r\n              price: Math.round(currentPrice),\r\n              change: change.toFixed(2)\r\n            };\r\n          }),\r\n          currencies: currencies.map(currency => {\r\n            const basePrice = basePrices[currency.symbol];\r\n            const currentPrice = generateMockPrice(basePrice, 0.01);\r\n            const prevPrice = marketData.currencies.find(c => c.symbol === currency.symbol)?.price || basePrice;\r\n            const change = ((currentPrice - prevPrice) / prevPrice * 100);\r\n            \r\n            return {\r\n              ...currency,\r\n              price: currentPrice.toFixed(4),\r\n              change: change.toFixed(2)\r\n            };\r\n          }),\r\n          commodities: commodities.map(commodity => {\r\n            const basePrice = basePrices[commodity.symbol];\r\n            const currentPrice = generateMockPrice(basePrice, 0.015);\r\n            const prevPrice = marketData.commodities.find(c => c.symbol === commodity.symbol)?.price || basePrice;\r\n            const change = ((currentPrice - prevPrice) / prevPrice * 100);\r\n            \r\n            return {\r\n              ...commodity,\r\n              price: Math.round(currentPrice),\r\n              change: change.toFixed(2)\r\n            };\r\n          })\r\n        };\r\n\r\n        setMarketData(prev => ({\r\n          ...prev,\r\n          ...mockData,\r\n          loading: false,\r\n          lastUpdate: new Date().toISOString(),\r\n          error: null\r\n        }));\r\n      } catch (error) {\r\n        console.error('Market data error:', error);\r\n        setMarketData(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: 'Failed to fetch market data. Please try again later.'\r\n        }));\r\n      }\r\n    };\r\n\r\n    // Initial fetch\r\n    fetchMarketData();\r\n\r\n    // Update every 60 seconds (1 minute)\r\n    const interval = setInterval(fetchMarketData, 60000);\r\n\r\n    // Cleanup interval on component unmount\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const renderMarketItem = (item) => (\r\n    <div key={item.symbol} className=\"flex justify-between items-center p-2 rounded-md bg-gray-50 dark:bg-gray-700\">\r\n      <div className=\"flex flex-col\">\r\n        <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{item.name}</span>\r\n        <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n          {marketData.lastUpdate && (\r\n            <span>Updated: {new Date(marketData.lastUpdate).toLocaleTimeString()}</span>\r\n          )}\r\n        </span>\r\n      </div>\r\n      <div className=\"flex flex-col items-end\">\r\n        <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n          {typeof item.price === 'number' ? item.price.toLocaleString() : item.price}\r\n        </span>\r\n        <span className={`text-xs font-medium ${getColorClass(item.change)}`}>\r\n          {formatPercentage(item.change)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderMarketSection = (title, items, isLoading) => (\r\n    <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm\">\r\n      <h3 className=\"text-lg font-semibold mb-3 text-gray-900 dark:text-gray-100\">{title}</h3>\r\n      <div className=\"grid grid-cols-1 gap-2\">\r\n        {isLoading ? (\r\n          <div className=\"animate-pulse space-y-2\">\r\n            {[1, 2, 3].map(i => (\r\n              <div key={i} className=\"h-12 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          items.map(renderMarketItem)\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n      {renderMarketSection('Market Indices', marketData.indices, marketData.loading)}\r\n      {renderMarketSection('Currencies', marketData.currencies, marketData.loading)}\r\n      {renderMarketSection('Commodities & Crypto', marketData.commodities, marketData.loading)}\r\n      \r\n      {marketData.error && (\r\n        <div className=\"col-span-full bg-red-50 dark:bg-red-900 p-4 rounded-lg\">\r\n          <p className=\"text-red-600 dark:text-red-200\">{marketData.error}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketOverview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}